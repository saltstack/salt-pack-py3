# Import base config
{% import "setup/base_map.jinja" as basecfg %}

# Get the user under which to build
{% set build_runas = pillar.get('build_runas', basecfg.build_runas) %}

# Get the repo signing timeout
{% set repo_sign_timeout = basecfg.repo_sign_timeout %}

# Get the release and architecture
{% set build_arch = pillar.get('build_arch', 'x86_64') %}

# determine which version of Python to build for
{% set build_py3 = basecfg.build_py3 %}

{% if build_py3 %}
{% set build_py_ver = 'py3' %}
{% set build_release = pillar.get('build_release', 'amzn2') %}
{% set build_epel = 'amzn2' %}
{% else %}
{% set build_py_ver = 'py2' %}
{% set build_release = pillar.get('build_release', 'amzn') %}
{% set build_epel = 'amzn1' %}
{% endif %}

# Set the destination for built packages
{% set build_dest_dir = basecfg.build_dest ~ '/' ~ build_py_ver ~ '/' ~ build_release ~ '/' ~ build_arch %}


# Set the mock target
{#  {% set build_tgt = build_epel ~ '-' ~ build_arch %} #}
  {% set build_tgt = build_release ~ '-salt-' ~ build_arch %}
  {% set build_dist = build_epel %}


# Get the home and gpg keys directories to use, some tools assume ~/.gnupg
{% if build_runas == 'root' %}
{% set build_homedir = '/' ~ build_runas %}
{% else %}
{% set build_homedir = '/home/' ~ build_runas %}
{% endif %}

{% set build_gpg_keydir = build_homedir ~ '/.gnupg' %}

# repo use of passphrases when signing
{% set repo_use_passphrase = basecfg.repo_use_passphrase %}
